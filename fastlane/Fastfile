fastlane_version "1.57.0"

default_platform :ios

platform :ios do
  before_all do
  end

  desc "Runs all the tests"
  lane :test do
    scan
  end

  desc "Creates new screenshots and uploads them to iTunes Connect"
  lane :screens do
    cocoapods
    match(app_identifier: "com.acast.app.debug", type: "development")
    snapshot
    frameit
    deliver(app: 925311796, app_identifier: "com.acast.app.native.production", skip_metadata: true, force: true)
  end

  desc "Submit a new daily build to Apple TestFlight"
  desc "A daily build is sent to Guava team by default"
  lane :dailybuild do |options|
    prepare(remote_branch: options[:remote_branch])

   # prepare(remote_branch: options[:remote_branch])

    # Increment build number to current date
    #build_number = Time.new.strftime("%Y.%m.%d")
    #increment_build_number build_number: build_number

    # Generate release notes from CHANGELOG
    #release_notes = latest_version.split("\n")[1..-1].join("\n")

    #match(type: "appstore")
    #gym(scheme: "Guava-Beta") # Build your app - more options available
    #pilot

     # Make sure our directory is clean, except for changes Fastlane has made
    #clean_build_artifacts

    # push to GitHub
    #git_commit(path: ".",
    #          message: "Deploying build #{build_number}.")

    #push_to_git_remote
   end

    desc "Submit a new weekly build to Apple TestFlight"
    desc "A weekly build is sent to Guava team by default"
    lane :weeklybuild do |options|
        config_env(options)

        prepare(remote_branch: options[:remote_branch])

        #match(type: "appstore")
        #gym(scheme: "Guava") # Build your app - more options available
        #pilot

          # Set version number to the one at the top of the CHANGELOG
  readme = File.read("../README.md")
  latest_version = readme.split("\n## ").first
  first_line = latest_version.split("\n").first
  version_number = first_line.split(" ")[1]

  increment_version_number(
   version_number: version_number # Set a specific version number
  )

  # Generate release notes from CHANGELOG
  release_notes = latest_version.split("\n")[1..-1].join("\n")

    #match(type: "appstore")
    gym(scheme: "Guava-Beta") # Build your app - more options available
    #pilot


  # Make sure our directory is clean, except for changes Fastlane has made
  clean_build_artifacts

  # Tag release and push to GitHub
  commit_version_bump message: "Deploying version #{version_number}."
  add_git_tag tag: version_number
  push_to_git_remote
    end


  desc "Submit a new Beta Build to Apple TestFlight"
  desc "This will also make sure the profile is up to date"
  lane :beta do
    #match(type: "appstore") # more information: https://codesigning.guide
    snapshot
    cert
    sigh
    gym(scheme: "Guava") # Build your app - more options available
    pilot
  end

  desc "Deploy a new version to the App Store"
  lane :appstore do
    match(type: "appstore")
    snapshot
    gym(scheme: "Guava") # Build your app - more options available
    deliver(force: true)
  end

# PRIVATE LANES

private_lane :prepare do |options|

    current_branch = git_branch

    puts "current branch #{current_branch}"

    ensure_git_status_clean

    # # Checkout remote branch if needed
    if !options[:remote_branch].nil? && options[:remote_branch] != current_branch
      puts "Checkout new branch #{options[:remote_branch]}"
      git_checkout(remote_branch: options[:remote_branch])
    end

    puts "current_branch new branch #{current_branch}"
    git_pull

    cocoapods
end

  after_all do |lane|

    # This block is called, only if the executed lane was successful
    # Make sure our directory is clean, except for changes Fastlane has made
    #clean_build_artifacts

    #add all files
    #git_add(path: ".")

    # Commit new build and push to git
   # commit_version_bump
  #  push_to_git_remote

  end

  error do |lane, exception|

  end
end



# More information about multiple platforms in fastlane: https://github.com/fastlane/fastlane/blob/master/docs/Platforms.md
# All available actions: https://github.com/fastlane/fastlane/blob/master/docs/Actions.md
